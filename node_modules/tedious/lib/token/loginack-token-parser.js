"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _token = require("./token");
var _tdsVersions = require("../tds-versions");
const interfaceTypes = {
  0: 'SQL_DFLT',
  1: 'SQL_TSQL'
};
function loginAckParser(parser, _options, callback) {
  // length
  parser.readUInt16LE(() => {
    parser.readUInt8(interfaceNumber => {
      const interfaceType = interfaceTypes[interfaceNumber];
      parser.readUInt32BE(tdsVersionNumber => {
        const tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];
        parser.readBVarChar(progName => {
          parser.readUInt8(major => {
            parser.readUInt8(minor => {
              parser.readUInt8(buildNumHi => {
                parser.readUInt8(buildNumLow => {
                  callback(new _token.LoginAckToken({
                    interface: interfaceType,
                    tdsVersion: tdsVersion,
                    progName: progName,
                    progVersion: {
                      major: major,
                      minor: minor,
                      buildNumHi: buildNumHi,
                      buildNumLow: buildNumLow
                    }
                  }));
                });
              });
            });
          });
        });
      });
    });
  });
}
var _default = loginAckParser;
exports.default = _default;
module.exports = loginAckParser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9rZW4iLCJyZXF1aXJlIiwiX3Rkc1ZlcnNpb25zIiwiaW50ZXJmYWNlVHlwZXMiLCJsb2dpbkFja1BhcnNlciIsInBhcnNlciIsIl9vcHRpb25zIiwiY2FsbGJhY2siLCJyZWFkVUludDE2TEUiLCJyZWFkVUludDgiLCJpbnRlcmZhY2VOdW1iZXIiLCJpbnRlcmZhY2VUeXBlIiwicmVhZFVJbnQzMkJFIiwidGRzVmVyc2lvbk51bWJlciIsInRkc1ZlcnNpb24iLCJ2ZXJzaW9ucyIsInJlYWRCVmFyQ2hhciIsInByb2dOYW1lIiwibWFqb3IiLCJtaW5vciIsImJ1aWxkTnVtSGkiLCJidWlsZE51bUxvdyIsIkxvZ2luQWNrVG9rZW4iLCJpbnRlcmZhY2UiLCJwcm9nVmVyc2lvbiIsIl9kZWZhdWx0IiwiZXhwb3J0cyIsImRlZmF1bHQiLCJtb2R1bGUiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdG9rZW4vbG9naW5hY2stdG9rZW4tcGFyc2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIsIHsgUGFyc2VyT3B0aW9ucyB9IGZyb20gJy4vc3RyZWFtLXBhcnNlcic7XG5cbmltcG9ydCB7IExvZ2luQWNrVG9rZW4gfSBmcm9tICcuL3Rva2VuJztcblxuaW1wb3J0IHsgdmVyc2lvbnNCeVZhbHVlIGFzIHZlcnNpb25zIH0gZnJvbSAnLi4vdGRzLXZlcnNpb25zJztcblxuY29uc3QgaW50ZXJmYWNlVHlwZXM6IHsgW2tleTogbnVtYmVyXTogc3RyaW5nIH0gPSB7XG4gIDA6ICdTUUxfREZMVCcsXG4gIDE6ICdTUUxfVFNRTCdcbn07XG5cbmZ1bmN0aW9uIGxvZ2luQWNrUGFyc2VyKHBhcnNlcjogUGFyc2VyLCBfb3B0aW9uczogUGFyc2VyT3B0aW9ucywgY2FsbGJhY2s6ICh0b2tlbjogTG9naW5BY2tUb2tlbikgPT4gdm9pZCkge1xuICAvLyBsZW5ndGhcbiAgcGFyc2VyLnJlYWRVSW50MTZMRSgoKSA9PiB7XG4gICAgcGFyc2VyLnJlYWRVSW50OCgoaW50ZXJmYWNlTnVtYmVyKSA9PiB7XG4gICAgICBjb25zdCBpbnRlcmZhY2VUeXBlID0gaW50ZXJmYWNlVHlwZXNbaW50ZXJmYWNlTnVtYmVyXTtcbiAgICAgIHBhcnNlci5yZWFkVUludDMyQkUoKHRkc1ZlcnNpb25OdW1iZXIpID0+IHtcbiAgICAgICAgY29uc3QgdGRzVmVyc2lvbiA9IHZlcnNpb25zW3Rkc1ZlcnNpb25OdW1iZXJdO1xuICAgICAgICBwYXJzZXIucmVhZEJWYXJDaGFyKChwcm9nTmFtZSkgPT4ge1xuICAgICAgICAgIHBhcnNlci5yZWFkVUludDgoKG1ham9yKSA9PiB7XG4gICAgICAgICAgICBwYXJzZXIucmVhZFVJbnQ4KChtaW5vcikgPT4ge1xuICAgICAgICAgICAgICBwYXJzZXIucmVhZFVJbnQ4KChidWlsZE51bUhpKSA9PiB7XG4gICAgICAgICAgICAgICAgcGFyc2VyLnJlYWRVSW50OCgoYnVpbGROdW1Mb3cpID0+IHtcbiAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG5ldyBMb2dpbkFja1Rva2VuKHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJmYWNlOiBpbnRlcmZhY2VUeXBlLFxuICAgICAgICAgICAgICAgICAgICB0ZHNWZXJzaW9uOiB0ZHNWZXJzaW9uLFxuICAgICAgICAgICAgICAgICAgICBwcm9nTmFtZTogcHJvZ05hbWUsXG4gICAgICAgICAgICAgICAgICAgIHByb2dWZXJzaW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgbWFqb3I6IG1ham9yLFxuICAgICAgICAgICAgICAgICAgICAgIG1pbm9yOiBtaW5vcixcbiAgICAgICAgICAgICAgICAgICAgICBidWlsZE51bUhpOiBidWlsZE51bUhpLFxuICAgICAgICAgICAgICAgICAgICAgIGJ1aWxkTnVtTG93OiBidWlsZE51bUxvd1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0pO1xufVxuXG5leHBvcnQgZGVmYXVsdCBsb2dpbkFja1BhcnNlcjtcbm1vZHVsZS5leHBvcnRzID0gbG9naW5BY2tQYXJzZXI7XG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUVBLElBQUFBLE1BQUEsR0FBQUMsT0FBQTtBQUVBLElBQUFDLFlBQUEsR0FBQUQsT0FBQTtBQUVBLE1BQU1FLGNBQXlDLEdBQUc7RUFDaEQsQ0FBQyxFQUFFLFVBQVU7RUFDYixDQUFDLEVBQUU7QUFDTCxDQUFDO0FBRUQsU0FBU0MsY0FBY0EsQ0FBQ0MsTUFBYyxFQUFFQyxRQUF1QixFQUFFQyxRQUF3QyxFQUFFO0VBQ3pHO0VBQ0FGLE1BQU0sQ0FBQ0csWUFBWSxDQUFDLE1BQU07SUFDeEJILE1BQU0sQ0FBQ0ksU0FBUyxDQUFFQyxlQUFlLElBQUs7TUFDcEMsTUFBTUMsYUFBYSxHQUFHUixjQUFjLENBQUNPLGVBQWUsQ0FBQztNQUNyREwsTUFBTSxDQUFDTyxZQUFZLENBQUVDLGdCQUFnQixJQUFLO1FBQ3hDLE1BQU1DLFVBQVUsR0FBR0MsNEJBQVEsQ0FBQ0YsZ0JBQWdCLENBQUM7UUFDN0NSLE1BQU0sQ0FBQ1csWUFBWSxDQUFFQyxRQUFRLElBQUs7VUFDaENaLE1BQU0sQ0FBQ0ksU0FBUyxDQUFFUyxLQUFLLElBQUs7WUFDMUJiLE1BQU0sQ0FBQ0ksU0FBUyxDQUFFVSxLQUFLLElBQUs7Y0FDMUJkLE1BQU0sQ0FBQ0ksU0FBUyxDQUFFVyxVQUFVLElBQUs7Z0JBQy9CZixNQUFNLENBQUNJLFNBQVMsQ0FBRVksV0FBVyxJQUFLO2tCQUNoQ2QsUUFBUSxDQUFDLElBQUllLG9CQUFhLENBQUM7b0JBQ3pCQyxTQUFTLEVBQUVaLGFBQWE7b0JBQ3hCRyxVQUFVLEVBQUVBLFVBQVU7b0JBQ3RCRyxRQUFRLEVBQUVBLFFBQVE7b0JBQ2xCTyxXQUFXLEVBQUU7c0JBQ1hOLEtBQUssRUFBRUEsS0FBSztzQkFDWkMsS0FBSyxFQUFFQSxLQUFLO3NCQUNaQyxVQUFVLEVBQUVBLFVBQVU7c0JBQ3RCQyxXQUFXLEVBQUVBO29CQUNmO2tCQUNGLENBQUMsQ0FBQyxDQUFDO2dCQUNMLENBQUMsQ0FBQztjQUNKLENBQUMsQ0FBQztZQUNKLENBQUMsQ0FBQztVQUNKLENBQUMsQ0FBQztRQUNKLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKLENBQUMsQ0FBQztBQUNKO0FBQUMsSUFBQUksUUFBQSxHQUVjckIsY0FBYztBQUFBc0IsT0FBQSxDQUFBQyxPQUFBLEdBQUFGLFFBQUE7QUFDN0JHLE1BQU0sQ0FBQ0YsT0FBTyxHQUFHdEIsY0FBYyJ9