"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _token = require("./token");
const FEATURE_ID = {
  SESSIONRECOVERY: 0x01,
  FEDAUTH: 0x02,
  COLUMNENCRYPTION: 0x04,
  GLOBALTRANSACTIONS: 0x05,
  AZURESQLSUPPORT: 0x08,
  UTF8_SUPPORT: 0x0A,
  TERMINATOR: 0xFF
};
function featureExtAckParser(parser, _options, callback) {
  let fedAuth;
  let utf8Support;
  function next() {
    parser.readUInt8(featureId => {
      if (featureId === FEATURE_ID.TERMINATOR) {
        return callback(new _token.FeatureExtAckToken(fedAuth, utf8Support));
      }
      parser.readUInt32LE(featureAckDataLen => {
        parser.readBuffer(featureAckDataLen, featureData => {
          switch (featureId) {
            case FEATURE_ID.FEDAUTH:
              fedAuth = featureData;
              break;
            case FEATURE_ID.UTF8_SUPPORT:
              utf8Support = !!featureData[0];
              break;
          }
          next();
        });
      });
    });
  }
  next();
}
var _default = featureExtAckParser;
exports.default = _default;
module.exports = featureExtAckParser;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdG9rZW4iLCJyZXF1aXJlIiwiRkVBVFVSRV9JRCIsIlNFU1NJT05SRUNPVkVSWSIsIkZFREFVVEgiLCJDT0xVTU5FTkNSWVBUSU9OIiwiR0xPQkFMVFJBTlNBQ1RJT05TIiwiQVpVUkVTUUxTVVBQT1JUIiwiVVRGOF9TVVBQT1JUIiwiVEVSTUlOQVRPUiIsImZlYXR1cmVFeHRBY2tQYXJzZXIiLCJwYXJzZXIiLCJfb3B0aW9ucyIsImNhbGxiYWNrIiwiZmVkQXV0aCIsInV0ZjhTdXBwb3J0IiwibmV4dCIsInJlYWRVSW50OCIsImZlYXR1cmVJZCIsIkZlYXR1cmVFeHRBY2tUb2tlbiIsInJlYWRVSW50MzJMRSIsImZlYXR1cmVBY2tEYXRhTGVuIiwicmVhZEJ1ZmZlciIsImZlYXR1cmVEYXRhIiwiX2RlZmF1bHQiLCJleHBvcnRzIiwiZGVmYXVsdCIsIm1vZHVsZSJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2tlbi9mZWF0dXJlLWV4dC1hY2stcGFyc2VyLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBQYXJzZXIsIHsgUGFyc2VyT3B0aW9ucyB9IGZyb20gJy4vc3RyZWFtLXBhcnNlcic7XG5cbmltcG9ydCB7IEZlYXR1cmVFeHRBY2tUb2tlbiB9IGZyb20gJy4vdG9rZW4nO1xuXG5jb25zdCBGRUFUVVJFX0lEID0ge1xuICBTRVNTSU9OUkVDT1ZFUlk6IDB4MDEsXG4gIEZFREFVVEg6IDB4MDIsXG4gIENPTFVNTkVOQ1JZUFRJT046IDB4MDQsXG4gIEdMT0JBTFRSQU5TQUNUSU9OUzogMHgwNSxcbiAgQVpVUkVTUUxTVVBQT1JUOiAweDA4LFxuICBVVEY4X1NVUFBPUlQ6IDB4MEEsXG4gIFRFUk1JTkFUT1I6IDB4RkZcbn07XG5cbmZ1bmN0aW9uIGZlYXR1cmVFeHRBY2tQYXJzZXIocGFyc2VyOiBQYXJzZXIsIF9vcHRpb25zOiBQYXJzZXJPcHRpb25zLCBjYWxsYmFjazogKHRva2VuOiBGZWF0dXJlRXh0QWNrVG9rZW4pID0+IHZvaWQpIHtcbiAgbGV0IGZlZEF1dGg6IEJ1ZmZlciB8IHVuZGVmaW5lZDtcbiAgbGV0IHV0ZjhTdXBwb3J0OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuXG4gIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgcGFyc2VyLnJlYWRVSW50OCgoZmVhdHVyZUlkKSA9PiB7XG4gICAgICBpZiAoZmVhdHVyZUlkID09PSBGRUFUVVJFX0lELlRFUk1JTkFUT1IpIHtcbiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKG5ldyBGZWF0dXJlRXh0QWNrVG9rZW4oZmVkQXV0aCwgdXRmOFN1cHBvcnQpKTtcbiAgICAgIH1cblxuICAgICAgcGFyc2VyLnJlYWRVSW50MzJMRSgoZmVhdHVyZUFja0RhdGFMZW4pID0+IHtcbiAgICAgICAgcGFyc2VyLnJlYWRCdWZmZXIoZmVhdHVyZUFja0RhdGFMZW4sIChmZWF0dXJlRGF0YSkgPT4ge1xuICAgICAgICAgIHN3aXRjaCAoZmVhdHVyZUlkKSB7XG4gICAgICAgICAgICBjYXNlIEZFQVRVUkVfSUQuRkVEQVVUSDpcbiAgICAgICAgICAgICAgZmVkQXV0aCA9IGZlYXR1cmVEYXRhO1xuICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgRkVBVFVSRV9JRC5VVEY4X1NVUFBPUlQ6XG4gICAgICAgICAgICAgIHV0ZjhTdXBwb3J0ID0gISFmZWF0dXJlRGF0YVswXTtcbiAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICAgIG5leHQoKTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIG5leHQoKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZmVhdHVyZUV4dEFja1BhcnNlcjtcbm1vZHVsZS5leHBvcnRzID0gZmVhdHVyZUV4dEFja1BhcnNlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsTUFBQSxHQUFBQyxPQUFBO0FBRUEsTUFBTUMsVUFBVSxHQUFHO0VBQ2pCQyxlQUFlLEVBQUUsSUFBSTtFQUNyQkMsT0FBTyxFQUFFLElBQUk7RUFDYkMsZ0JBQWdCLEVBQUUsSUFBSTtFQUN0QkMsa0JBQWtCLEVBQUUsSUFBSTtFQUN4QkMsZUFBZSxFQUFFLElBQUk7RUFDckJDLFlBQVksRUFBRSxJQUFJO0VBQ2xCQyxVQUFVLEVBQUU7QUFDZCxDQUFDO0FBRUQsU0FBU0MsbUJBQW1CQSxDQUFDQyxNQUFjLEVBQUVDLFFBQXVCLEVBQUVDLFFBQTZDLEVBQUU7RUFDbkgsSUFBSUMsT0FBMkI7RUFDL0IsSUFBSUMsV0FBZ0M7RUFFcEMsU0FBU0MsSUFBSUEsQ0FBQSxFQUFHO0lBQ2RMLE1BQU0sQ0FBQ00sU0FBUyxDQUFFQyxTQUFTLElBQUs7TUFDOUIsSUFBSUEsU0FBUyxLQUFLaEIsVUFBVSxDQUFDTyxVQUFVLEVBQUU7UUFDdkMsT0FBT0ksUUFBUSxDQUFDLElBQUlNLHlCQUFrQixDQUFDTCxPQUFPLEVBQUVDLFdBQVcsQ0FBQyxDQUFDO01BQy9EO01BRUFKLE1BQU0sQ0FBQ1MsWUFBWSxDQUFFQyxpQkFBaUIsSUFBSztRQUN6Q1YsTUFBTSxDQUFDVyxVQUFVLENBQUNELGlCQUFpQixFQUFHRSxXQUFXLElBQUs7VUFDcEQsUUFBUUwsU0FBUztZQUNmLEtBQUtoQixVQUFVLENBQUNFLE9BQU87Y0FDckJVLE9BQU8sR0FBR1MsV0FBVztjQUNyQjtZQUNGLEtBQUtyQixVQUFVLENBQUNNLFlBQVk7Y0FDMUJPLFdBQVcsR0FBRyxDQUFDLENBQUNRLFdBQVcsQ0FBQyxDQUFDLENBQUM7Y0FDOUI7VUFDSjtVQUNBUCxJQUFJLENBQUMsQ0FBQztRQUNSLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKLENBQUMsQ0FBQztFQUNKO0VBRUFBLElBQUksQ0FBQyxDQUFDO0FBQ1I7QUFBQyxJQUFBUSxRQUFBLEdBRWNkLG1CQUFtQjtBQUFBZSxPQUFBLENBQUFDLE9BQUEsR0FBQUYsUUFBQTtBQUNsQ0csTUFBTSxDQUFDRixPQUFPLEdBQUdmLG1CQUFtQiJ9